<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lab notebook</title><link>http://joshmontague.com/</link><description></description><atom:link href="http://joshmontague.com/feeds/josh-montague.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 03 Sep 2014 00:00:00 -0600</lastBuildDate><item><title>One Year In: Data Scientist</title><link>http://joshmontague.com/posts/2014/one-year-in-data-scientist/</link><description>&lt;p&gt;This summer marked just over one year since I donned a goofy hat, shook my advisor's hand, promised my parents they'd never have to attend another graduation ceremony, and received the piece of paper that declared I was done with higher education.&lt;sup id="fnref:school"&gt;&lt;a class="footnote-ref" href="#fn:school" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; About the same time, I started working full-time as a data scientist at a small-ish software company. It seems like the one year mark is as good a time as any to pause and reflect, maybe for both my own sake and for that of anyone wondering, "Josh, what were the biggest changes you experienced in your first year that could be helpful for someone interested in making a similar transition?" Maybe no one is actually wondering that... but writing is healthy, so here you go anyway. &lt;/p&gt;
&lt;p&gt;I should start with some context; even though this kind of story will be different for everyone, I can at least give an idea about the "from" and "to". Before this transition, I spent six years in graduate school studying physics. As is common for these programs, there were two or three years of coursework followed by (and overlapping with) three or four years of research. When I left the lab, I started working full-time at a software (&lt;a href="http://en.wikipedia.org/wiki/Software_as_a_service"&gt;SaaS&lt;/a&gt;) company of about 50 people.&lt;sup id="fnref:path"&gt;&lt;a class="footnote-ref" href="#fn:path" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; My role (and that of my small team) was best described as "internal consultancy": doing research and providing answers to technical questions that came from sales, marketing, product, and engineering. This required varying levels of software development and analysis in a handful of languages and environments: predominantly a shell command line (bash), Python, and R. &lt;/p&gt;
&lt;p&gt;Ok, on to the more interesting stuff; what were the biggest changes in this transition? &lt;/p&gt;
&lt;h2&gt;Time&lt;/h2&gt;
&lt;p&gt;The first change I noticed was the perception and use of time. In graduate school, the relevant time scales were something along these lines: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(&lt;strong&gt;substantial research contribution&lt;/strong&gt; aka graduation: &lt;em&gt;five to six years&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;major result&lt;/strong&gt; journal article / funding proposal: &lt;em&gt;one year&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minor result&lt;/strong&gt; conference paper / presentation: &lt;em&gt;three months&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fractional progress&lt;/strong&gt; incremental work toward minor results: &lt;em&gt;one week to one month&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Particularly in my experimental research, "fractional progress" was simply the nitty gritty bit of getting actual work done: "successfully collecting dataset X," or "completing the analysis of dataset Y," or "finally building the op-amp with the proper gain and signal-to-noise ratio." &lt;/p&gt;
&lt;p&gt;In contrast, I vividly recall the first urgent task I was assigned in my new role, which came with a followup of "we really need these answers soon - like tomorrow." Now, first and foremost: when made frequently, that kind of request can be a real red flag about the perceived value of your time. Thankfully, this was an exceptional case and most requests do not come with a priority-level-9 urgency. But that experience was an extreme example that frames the idea. Relevant time scales in the business world are shorter. I've found the scales to be more along these lines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;major result&lt;/strong&gt; delivery of all projects for quarterly goals: &lt;em&gt;three months&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minor result&lt;/strong&gt; success / progress on individual projects: &lt;em&gt;one month&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fractional progress&lt;/strong&gt; incremental work toward minor results: &lt;em&gt;one day to one week&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an aside: you may not have thought about time in units of "quarters" before, but in a business setting, you will. See also, the &lt;strong&gt;Business&lt;/strong&gt; section, below.&lt;/p&gt;
&lt;p&gt;In this case, "fractional progress" / day-to-day work is pretty similar in scale, but covers many more potential areas: working through a particular data collection or analysis, bug fixes and new features in software and tools, customer conversations and support, putting together presentations for meetings or Meetups, and all manner of assorted other things. Any one of these may be a small (or large) part of a bigger project that provides business value.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchline: time is "shorter"; progress is measured more frequently.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;Drivers&lt;/h2&gt;
&lt;p&gt;A bigger change, still, was the shift in the motivation and drivers of the work. When I joined my research lab, there was already some research momentum from previous work. For my own research, I took a fork of that previous work and mostly tugged on the interesting threads to see where they led. Now, there were some implicit things at work there, too; for example, my advisor had enough experience to feel that my research was worthwhile and capable of being pitched to funding agencies. But, beyond that, the research directions were - as a favorite professor once described&lt;sup id="fnref:intuition"&gt;&lt;a class="footnote-ref" href="#fn:intuition" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; - very much a "follow your nose" experience. Use your intuition and best judgement, but let the path be guided by the new and unexpected discoveries that occur along the way.  &lt;/p&gt;
&lt;p&gt;In my new role, my team is guided by a similar sense of exploration within any particular project (undoubtedly related to fact that we're mostly former research scientists). But the selection of what projects we work on is driven much more by the business needs. Will this project help the industry move forward? Will it drive interest in our products or help us better understand the current use of our services? Does it directly benefit a customer? Does it ultimately lead to revenue for the company? Even though our team is not a software development team, most of our colleagues are; so we try to work using some of the same principles. This means "should we work on X?" is often decided by how close the &lt;a href="http://en.wikipedia.org/wiki/User_story"&gt;user story&lt;/a&gt; gets to the actual business customer. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchline: exploration and following intuition is required, but stay focused on things that will provide business value.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;Business&lt;/h2&gt;
&lt;p&gt;The last idea I'll mention is around what it means to be a "business." I'll admit that I previously had approximately zero understanding of what came along with - and was considered part of - a business. At some level, it had to mean that there is a product or service (maybe more than one), and revenue came in from somewhere. For example, consumers could pay the business for the product. Or, consumers can use the product for free while being shown advertisements, and those advertisers would contribute revenue to the business for the opportunity to display ads. Or maybe all of the funding comes from an actual person or another business (angel or venture investments) in the hope that someday they'll create a successful product that ends up in one of the first two categories (and subsequently provide a return on investment for whomever provided the initial funds). Anyway, this is all perspective that I have &lt;em&gt;now&lt;/em&gt;, but I had no idea about this before. &lt;/p&gt;
&lt;p&gt;One of the most overwhelming changes I experienced was the range of different people and teams involved; it turns out it takes a lot of cooperative, functional teams to make a successful business. Wrapping my head around the acronyms: BD, PMs, AMs, ... I struggled for quite a while trying to understand and internalize the roles that all of these people had. Oh, and those ones are: business development, product (or project) manager (or sometimes "product marketing", just to mess with you), and account managers. Finding out the roles that each of these groups of people (and all the rest!) have within the company is really helpful for understanding your own place and value. Don't be shy about asking folks what they do; it helps identify ways you can be assests for one another. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchlines: 1) funding has to come from somewhere; it's helpful to understand what - and to whom - your business owes its existence. 2) It takes a lot of different roles to really make a business rock.&lt;sup id="fnref:headcount"&gt;&lt;a class="footnote-ref" href="#fn:headcount" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; It takes time to comprehend how everyone fills their niche, but learning the roles is crucial.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;Now What?&lt;/h2&gt;
&lt;p&gt;So, what's the takeaway? Unfortunately, I can't help you figure out your new data-related role in a business outside of the research lab (but, hey, congrats on finding something!). But, I hope these thoughts shine a bit of light on some of the challenges I ran into related to the approach and awareness that I brought from my previous role in academic research. Everyone's circumstances are a little different, so you may not experience any of these; or maybe you have more. Either way, good luck in your new path!&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:school"&gt;
&lt;p&gt;Barring, of course, any unexpected impulses to set off for an MBA or MD.&amp;#160;&lt;a class="footnote-backref" href="#fnref:school" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:path"&gt;
&lt;p&gt;Having writen this, it feels like there's also an opportunity for a companion article about the particular path that led me to now; I've added it to my list; stay tuned. &amp;#160;&lt;a class="footnote-backref" href="#fnref:path" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:intuition"&gt;
&lt;p&gt;Part of the reason this line was so memorable was that it came while our mid-career professor was trying to explain how we should use our intuition to solve path integrals in quantum mechanics.  &amp;#160;&lt;a class="footnote-backref" href="#fnref:intuition" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:headcount"&gt;
&lt;p&gt;Again, this is from the perspective of a company with ~50 people. At an earlier stage, there were five or six people, so everyone had to do their best to wear multiple hats.&amp;#160;&lt;a class="footnote-backref" href="#fnref:headcount" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Montague</dc:creator><pubDate>Wed, 03 Sep 2014 00:00:00 -0600</pubDate><guid>tag:joshmontague.com,2014-09-03:posts/2014/one-year-in-data-scientist/</guid><category>career</category><category>business</category></item><item><title>Short: Create a Text File of U.S. State Names</title><link>http://joshmontague.com/posts/2014/state-names/</link><description>&lt;p&gt;While working on a project recently, I needed a simple list of US State names. My goal was to have a plain text file, one state per line, no funny business. The order of the states wasn't important. I always like a command-line challenge, so my first thought was "find the list online somewhere, &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt; as needed, slice up the html, and be done."&lt;sup id="fnref:woops"&gt;&lt;a class="footnote-ref" href="#fn:woops" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;So, I went to &lt;a href="http://en.wikipedia.org/wiki/Main_Page"&gt;the source of all information&lt;/a&gt;, and lo! there is a &lt;a href="http://en.wikipedia.org/wiki/List_of_states_and_territories_of_the_United_States#States"&gt;table&lt;/a&gt; whose first column is all the US states. &lt;em&gt;#fistpump&lt;/em&gt; The only problem is I really wasn't planning to parse HTML for this little exercise; seems like a bit of overkill. But then I noted the &lt;code&gt;[edit]&lt;/code&gt; link next to the table name...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Wikipedia table edit button" src="http://joshmontague.com/images/state-table.jpg" title="Yes, this will definitely work." /&gt;&lt;/p&gt;
&lt;p&gt;... and clicked through that to observe just the table source. Now this we can work with! &lt;/p&gt;
&lt;p&gt;I simply copy/pasted this plain text into a file locally (say, &lt;code&gt;states-table.txt&lt;/code&gt;). Then, had a look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;head -n30 states-table.txt 
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;States&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;| &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wikitable sortable plainrowheaders&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text-align: right;&amp;quot;&lt;/span&gt;
|+ States of the United States
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|State
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1%|&lt;span class="o"&gt;[[&lt;/span&gt;List of U.S. state abbreviations|Abbr.&lt;span class="o"&gt;]]&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8%|&lt;span class="o"&gt;[[&lt;/span&gt;Capital city|Capital&lt;span class="o"&gt;]]&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Largest city&lt;span class="o"&gt;{{&lt;/span&gt;&lt;span class="c"&gt;#tag:ref|The largest city is the city in a state with the largest population in the [[city proper]]; [[metropolitan area]]s are not considered in this number.|group=upper-alpha|name=a}}&amp;lt;ref name=&amp;quot;State and Local Government Finances and Employment&amp;quot;&amp;gt;{{cite web|url=http://www.census.gov/compendia/statab/2012/tables/12s0448.pdf|title=State and Local Government Finances and Employment|year=2012|publisher=[[United States Census Bureau]]|pages=284|type=pdf|accessdate=July 8, 2013}}&amp;lt;/ref&amp;gt;&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;11% data-sort-type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;|Statehood
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12%&amp;quot;&lt;/span&gt;|Population&amp;lt;br&amp;gt;&lt;span class="o"&gt;(&lt;/span&gt;2013 est&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;ref &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;PopEstUS&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;cite web|url&lt;span class="o"&gt;=&lt;/span&gt;http://www.census.gov/popest/data/state/totals/2013/tables/NST-EST2013-01.xls|title&lt;span class="o"&gt;=&lt;/span&gt;Table 1. Annual Estimates of the Population &lt;span class="k"&gt;for &lt;/span&gt;the United States, Regions, States, and Puerto Rico: April 1, 2010 to July 1, 2013|format&lt;span class="o"&gt;=[[&lt;/span&gt;Microsoft Excel&lt;span class="o"&gt;]]&lt;/span&gt;|work&lt;span class="o"&gt;=&lt;/span&gt;2013 Population Estimates|publisher&lt;span class="o"&gt;=[[&lt;/span&gt;United States Census Bureau&lt;span class="o"&gt;]]&lt;/span&gt;, Population Division|date&lt;span class="o"&gt;=&lt;/span&gt;December 2013|accessdate&lt;span class="o"&gt;=&lt;/span&gt;January 12, 2014&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/ref&amp;gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Total area in mi&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;km&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;&lt;span class="o"&gt;){{&lt;/span&gt;&lt;span class="c"&gt;#tag:ref|Area figures are rounded to the nearest whole number.|group=upper-alpha|name=b}}&amp;lt;ref name=&amp;quot;2010 Census of Population and Housing&amp;quot;&amp;gt;{{cite web|url=http://www.census.gov/prod/cen2010/cph-2-1.pdf|title=2010 Census of Population and Housing|date=September 2012|publisher=[[United States Census Bureau]]|pages=41|type=pdf|accessdate=July 8, 2013}}&amp;lt;/ref&amp;gt;&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Land area in mi&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;km&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;ref &lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;upper-alpha &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;b /&amp;gt;&amp;lt;ref &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2010 Census of Population and Housing&amp;quot;&lt;/span&gt; /&amp;gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Water area in mi&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;km&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;ref &lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;upper-alpha &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;b /&amp;gt;&amp;lt;ref &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2010 Census of Population and Housing&amp;quot;&lt;/span&gt; /&amp;gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1%|&lt;span class="o"&gt;[[&lt;/span&gt;List of United States congressional districts|House seat&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)]]&lt;/span&gt;
|-
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;row&amp;quot;&lt;/span&gt;|&lt;span class="o"&gt;{{&lt;/span&gt;flag|Alabama&lt;span class="o"&gt;}}&lt;/span&gt;
|AL
|&lt;span class="o"&gt;[[&lt;/span&gt;Montgomery, Alabama|Montgomery&lt;span class="o"&gt;]]&lt;/span&gt;
|&lt;span class="o"&gt;[[&lt;/span&gt;Birmingham, Alabama|Birmingham&lt;span class="o"&gt;]]&lt;/span&gt;
|December 14, 1819
|4,833,722
|&lt;span class="o"&gt;{{&lt;/span&gt;Convert|52420|mi2|km2|sigfig&lt;span class="o"&gt;=&lt;/span&gt;6|abbr&lt;span class="o"&gt;=&lt;/span&gt;values|sortable&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="o"&gt;}}&lt;/span&gt;
|&lt;span class="o"&gt;{{&lt;/span&gt;Convert|50645|mi2|km2|sigfig&lt;span class="o"&gt;=&lt;/span&gt;6|abbr&lt;span class="o"&gt;=&lt;/span&gt;values|sortable&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="o"&gt;}}&lt;/span&gt;
|&lt;span class="o"&gt;{{&lt;/span&gt;Convert|1775|mi2|km2|sigfig&lt;span class="o"&gt;=&lt;/span&gt;4|abbr&lt;span class="o"&gt;=&lt;/span&gt;values|sortable&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="o"&gt;}}&lt;/span&gt;
|7
|-
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;row&amp;quot;&lt;/span&gt;|&lt;span class="o"&gt;{{&lt;/span&gt;flag|Alaska&lt;span class="o"&gt;}}&lt;/span&gt;
|AK
|&lt;span class="o"&gt;[[&lt;/span&gt;Juneau, Alaska|Juneau&lt;span class="o"&gt;]]&lt;/span&gt;
|&lt;span class="o"&gt;[[&lt;/span&gt;Anchorage, Alaska|Anchorage&lt;span class="o"&gt;]]&lt;/span&gt;
|January 3, 1959
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Clearly there's a lot of extra formatting for the other columns, but we can see a couple of the state names, so we can definitely observe some patterns. A simple &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; combination get us almost to the finish line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat states-table.txt | grep &lt;span class="s2"&gt;&amp;quot;flag|&amp;quot;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/^.*flag|//;s/}}.*//&amp;#39;&lt;/span&gt;
Alabama
Alaska
Arizona
Arkansas
California
Colorado
Connecticut
Delaware
Florida
Georgia &lt;span class="o"&gt;(&lt;/span&gt;U.S. state&lt;span class="o"&gt;)&lt;/span&gt;|name&lt;span class="o"&gt;=&lt;/span&gt;Georgia
Hawaii
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One extra bit of &lt;code&gt;sed&lt;/code&gt; formatting (strip anything that's not a letter)... &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat states-table.txt | grep &lt;span class="s2"&gt;&amp;quot;flag|&amp;quot;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/^.*flag|//;s/}}.*//;s/ [^a-Z].*$//&amp;#39;&lt;/span&gt;
Alabama
Alaska
Arizona
Arkansas
California
Colorado
Connecticut
Delaware
Florida
Georgia
Hawaii
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... and we're good to go! (note: if you're doing this on OS X, you may have to swap that last &lt;code&gt;sed&lt;/code&gt; range for &lt;code&gt;[^a-zA-Z]&lt;/code&gt;) &lt;/p&gt;
&lt;p&gt;It's always nice to flex your command-line fu.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:woops"&gt;
&lt;p&gt;In hindsight, I clearly could have spent an extra 30 seconds on google and just copypasta'd the results from a site like &lt;a href="http://liststates.com/"&gt;this one&lt;/a&gt;. But where's the fun in that?? &amp;#160;&lt;a class="footnote-backref" href="#fnref:woops" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Montague</dc:creator><pubDate>Mon, 09 Jun 2014 00:00:00 -0600</pubDate><guid>tag:joshmontague.com,2014-06-09:posts/2014/state-names/</guid><category>short</category><category>bash</category><category>shell</category><category>munge</category></item><item><title>Social Media Pulse Meetup Presentation</title><link>http://joshmontague.com/posts/2014/ab-pulse-talk/</link><description>&lt;p&gt;I recently had the pleasure of giving a short talk at one of my favorite local Meetups: &lt;a href="http://www.meetup.com/Analyze-Boulder/events/156806792/"&gt;AnalyzeBoulder&lt;/a&gt;. If you have the chance, this group of folks is a lot of fun to interact with. My talk was a short introduction to the space of social data, the importance of focusing on a single event in a "firehose" of realtime data, and a brief intro of the Social Media Pulse (SMP). The SMP is a model we have used to describe the data shared by e.g. Twitter users following an unprecedented and unexpected event like an earthquake. The slides are available online, &lt;a href="http://jrmontag.github.io/AnalyzeBoulder-SocialPulse/"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jrmontag/AnalyzeBoulder-SocialPulse"&gt;&lt;img alt="Social Media Pulse" src="http://joshmontague.com/images/AB-pulse.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also used the presentation as an opportunity to learn how to create talks using the &lt;a href="http://lab.hakim.se/reveal-js/#/"&gt;reveal.js&lt;/a&gt; framework. I do love to Markdown all the things, so being able to write the talk almost entirely in Markdown (plus occasional javascript/html) was great. This proved to be a pretty fun platform for creating and delivering a talk - not needing to bring my computer to an event was nice. The presentation, all materials and data that went into it, and an IPython notebook for creating some of the figures are all contained in &lt;a href="https://github.com/jrmontag/AnalyzeBoulder-SocialPulse"&gt;the repo&lt;/a&gt;. There's also a template repo for creating your own reveal.js preso available &lt;a href="https://github.com/jrmontag/reveal-template"&gt;here&lt;/a&gt;. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Montague</dc:creator><pubDate>Mon, 10 Feb 2014 00:00:00 -0700</pubDate><guid>tag:joshmontague.com,2014-02-10:posts/2014/ab-pulse-talk/</guid><category>javascript</category><category>models</category><category>meetup</category></item><item><title>Weekend Project: Build a Pelican-powered site on GitHub Pages</title><link>http://joshmontague.com/posts/2014/pelican-on-github/</link><description>&lt;blockquote&gt;
&lt;p&gt;Disclaimer: 
This post got pretty long, especially for the first real post on this site. But by boiling down my very non-linear experience and putting this in writing, I hope that you could read through this and make it all work in an hour or so. Let me know how close that is to reality. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For quick, get-up-and-running web publishing, there is &lt;a href="http://tumblr.com"&gt;obviously&lt;/a&gt; &lt;a href="http://wordpress.com"&gt;no&lt;/a&gt; &lt;a href="http://blogger.com"&gt;shortage&lt;/a&gt; &lt;a href="http://medium.com"&gt;of&lt;/a&gt; &lt;a href="http://ghost.org"&gt;platforms&lt;/a&gt; &lt;a href="http://subtle.com"&gt;out&lt;/a&gt; &lt;a href="http://typepad.com"&gt;there&lt;/a&gt; to use; most have a free, hosted version, too (I'm sure there are a million other options I've never heard of). I've certainly started and neglected my share of these platforms (or had them disappear ... RIP &lt;a href="http://posterous.com"&gt;posterous&lt;/a&gt;). &lt;/p&gt;
&lt;p&gt;But, I've been super excited learning things my new career* and I was looking for an outlet for sharing (beyond the &lt;a href="http://twitter.com/jrmontag"&gt;140-character vignettes&lt;/a&gt;). I was looking for a combination of things: balance between "get your hands dirty" and "don't get hung up on too many details", balance between "keep it lightweight" and "give me some features", and balance between "let me learn something new" and "keep it relevant". &lt;/p&gt;
&lt;p&gt;Ultimately, my love for Python won out and I went for a static &lt;a href="https://pelican.readthedocs.org/"&gt;Pelican&lt;/a&gt;-based solution hosted via &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. From this combination of things I get:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python (the language with which I'm most familiar and love to use)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pelican (lightweight, fast, CLI tools for compiling and publishing, compose in Markdown) &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git / GitHub (sweet sweet version control, plus open-source-y website)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I'm still kicking the tires and figuring things out (I haven't even figured out how to change the theme yet), so far it's been fun to explore. There are some components that are still new to me, so I'm learning as I go. This edition of &lt;a href="http://joshmontague.com/tag/weekend.html"&gt;Weekend Project&lt;/a&gt; is just about getting the pieces up and running - better understanding will hopefully come down the road.&lt;/p&gt;
&lt;p&gt;*Another good topic to write about in the future. &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I kicked this project off by reading two great posts by Martin Brochhaus (&lt;a href="http://martinbrochhaus.com/pelican2.html"&gt;newer&lt;/a&gt;, &lt;a href="http://martinbrochhaus.com/pelican.html"&gt;older&lt;/a&gt;), but had to supplement those with various official docs along the way when I was in unfamiliar territory (which was approximately all of the time). I think I also had to add in a few tweaks for things that have changed since those posts were written. You could get most of this by just reading his posts (and I recommend clicking through), but I wanted the experience of writing it out. I've tried to include the most relevant extra links inline below where they were helpful to me - let me know if I missed something super useful.&lt;/p&gt;
&lt;h1&gt;Local Python setup&lt;/h1&gt;
&lt;p&gt;Let's install some packages. I'm using &lt;a href="https://pypi.python.org/pypi/virtualenv"&gt;&lt;code&gt;virtualenv&lt;/code&gt;&lt;/a&gt; to choose a specific Python interpreter and maintain an isolated set of packages relevant to this project. I'm also using &lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/"&gt;&lt;code&gt;virtualenvwrapper&lt;/code&gt;&lt;/a&gt; which is a wrapper for &lt;code&gt;virtualenv&lt;/code&gt; that simplifies the API and makes it a little more friendly to use. Source &lt;code&gt;virtualenvwrapper.sh&lt;/code&gt; and let it set things up with defaults (if you want to override the defaults, open the script and see what environment variables to set before you source the file). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install virtualenv
sudo pip install virtualenvwrapper
&lt;span class="c"&gt;# optionally export the correct environment vars used in the shell script &lt;/span&gt;
&lt;span class="c"&gt;#   (if you want to override the defaults)&lt;/span&gt;
. /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Aside: through the process of setting up this project, I'm starting to finally grok &lt;code&gt;virtualenv&lt;/code&gt;, and I suspect that &lt;code&gt;pip&lt;/code&gt; (via e.g. &lt;code&gt;easy_install&lt;/code&gt;), &lt;code&gt;virtualenv&lt;/code&gt;, and &lt;code&gt;virtualenvwrapper&lt;/code&gt; are among a small number of python packages that should ever be &lt;code&gt;sudo&lt;/code&gt; installed, system-wide.) &lt;/p&gt;
&lt;p&gt;Create a new virtualenv (named 'blogging', for example) with a path to your interpreter (e.g. the result of &lt;code&gt;which python&lt;/code&gt; or whichever installation you'd like to use), and &lt;code&gt;pip install&lt;/code&gt; the relevant packages into that virtualenv (feel free to steal my &lt;a href="https://github.com/jrmontag/blog/blob/master/requirements.txt"&gt;requirements.txt&lt;/a&gt; and run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;). These packages will also install a bunch of others as dependencies.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkvirtualenv -p /path/to/.../python2.7 blogging     &lt;span class="c"&gt;# for example&lt;/span&gt;
pip install -r /path/to/.../requirements.txt
&lt;span class="c"&gt;# optionally check the currently-installed packages -- a handy cmd to know&lt;/span&gt;
&lt;span class="c"&gt;#   (this is like &amp;#39;pip freeze&amp;#39; for the active virtualenv) &lt;/span&gt;
lssitepackages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the time of writing, I'm using Python 2.7.6 for this environment. A couple of other &lt;code&gt;virtualenvwrapper&lt;/code&gt; commands that you'll want to know: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;workon              &lt;span class="c"&gt;# list the existing virtualenvs (also visible at ~/.virtualenv) &lt;/span&gt;
workon your_env     &lt;span class="c"&gt;# enter the your_env virtualenv (prompt will change) &lt;/span&gt;
deactivate          &lt;span class="c"&gt;# exit current virtualenv, return to system environment&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Local project setup&lt;/h1&gt;
&lt;p&gt;This part is pretty subjective. Ultimately, we're going to have a git repository involved, but I'm actually keeping it above the root of my project tree for now. I have a &lt;code&gt;blog&lt;/code&gt; directory at the bottom level and am planning to keep e.g. icon and theme directories in there, too. Soon, we'll create a git repository in the &lt;code&gt;src&lt;/code&gt; directory to hold our content. First, use the handy Pelican &lt;a href="https://pelican.readthedocs.org/en/3.2/getting_started.html#kickstart-your-site"&gt;quickstart&lt;/a&gt; command to set up the rest of the project structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir -p ~/blog/src
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/blog/src
workon blogging     &lt;span class="c"&gt;# or whatever you named your env (and if you aren&amp;#39;t already in it)&lt;/span&gt;
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Don't worry too much about the questions - I just hit enter for all of them to use the default settings. While still in the &lt;code&gt;src&lt;/code&gt; directory, initialize a new git repository (&lt;code&gt;git init&lt;/code&gt;) and create a &lt;code&gt;.gitignore&lt;/code&gt; file with the lines below. We're excluding the compiled, swap, and output (mostly html and CSS) files. The content of &lt;code&gt;output/&lt;/code&gt; will end up in our &lt;code&gt;gh-pages&lt;/code&gt; branch (more on this shortly). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# add these to your .gitignore&lt;/span&gt;
*.pyc
*.swp
*.pid       &lt;span class="c"&gt;# this gets created by the develop_server.sh script&lt;/span&gt;
output/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's sync the repo before we move on. Create a new project repository on GitHub, and skip the "Initialize this repository with a README" part. Grab the ssh address and bring it over to your new local repo. Set the upstream remote / master and add all your new content: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# assuming you&amp;#39;ve created the new-repo repository on github&lt;/span&gt;
git add -A
git commit -m&lt;span class="s2"&gt;&amp;quot;initial commit&amp;quot;&lt;/span&gt; 
git remote add origin new-repo_ssh-address
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If that went well, you can cruise over the repo on GitHub and make sure all your files are there (and hopefully no &lt;code&gt;output/&lt;/code&gt; directory because we included it in the &lt;code&gt;.gitignore&lt;/code&gt;).  &lt;/p&gt;
&lt;p&gt;Time to write your first post. Our articles are going in the &lt;code&gt;src/content/&lt;/code&gt; directory. Pelican supports both &lt;a href="http://docs.getpelican.com/en/3.3.0/getting_started.html#file-metadata"&gt;reStructuredText and Markdown&lt;/a&gt;. The article syntax is different for the two filetypes, so when you pick one, check that link for the proper headings. If you want to just get started using Markdown, then create a simple new file like the one below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# create a file called hello-world.md in src/content/ &lt;/span&gt;
&lt;span class="c"&gt;#   with something like the text below... &lt;/span&gt;
Tite: Hello World!
Date: 2014-01-01
Tags: pelican
Slug: hello-world
Author: Clark Kent
Summary: In which the author writes their first blog post.

We&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re blogging with Pelican!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that you have some content, time to let Pelican do it's thing. The &lt;code&gt;pelican-quickstart&lt;/code&gt; process should have created a Makefile in your &lt;code&gt;src&lt;/code&gt; directory with some helpful commands for blog development. One of those is labeled &lt;code&gt;devserver&lt;/code&gt; and it lets you view the current state of your &lt;code&gt;content&lt;/code&gt; directory, locally at port 8000. You can look through what &lt;code&gt;make devserver&lt;/code&gt; does (it calls the &lt;code&gt;develop_server.sh&lt;/code&gt; shell script, which in turn calls on Pelican...) or just use it for now and understand it later. &lt;/p&gt;
&lt;p&gt;If all went as planned, you should be able to point a browser to &lt;code&gt;http://localhost:8000/&lt;/code&gt; and see your new blog, live and kicking. Well, live in the only-exists-on-your-machine-while-devserver-is-running kind of way. But it's a start. For now, kill the local devserver process (cntl-C, followed by &lt;code&gt;./develop_server.sh stop&lt;/code&gt; because cntl-C seemingly doesn't fully kill the process), and let's put this content somewhere where others can see it. &lt;/p&gt;
&lt;h1&gt;GitHub Pages setup&lt;/h1&gt;
&lt;p&gt;GitHub is amazingly powerful for a host of reasons. One of those is the ability to set up a low-... actually a basically zero-overhead website to display your projects via &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. A couple of stellar examples are the docs for &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; - a static website generator similar to Pelican but in Ruby - and Cam Davidson-Pilon's &lt;a href="http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/"&gt;Probabilistic Programming book&lt;/a&gt;. These are also great examples of having your content served through a custom domain (Jekyll) or from the default GitHub address of your project (Probabilistic...). [Tangent: I'm working through Davidson-Pilon's book right now and I highly recommend it if you're into that sort of thing.] &lt;/p&gt;
&lt;p&gt;For now, we'll use the latter and return to talk about custom domain names another time. To serve static content from a GitHub repo, you need a &lt;code&gt;gh-pages&lt;/code&gt; branch as part of your project repo. If you're a git wizard and are already adept at managing branches, this may seem anticlimactic but we can use a &lt;a href="https://github.com/davisp/ghp-import"&gt;really handy script&lt;/a&gt; that manages the &lt;code&gt;gh-pages&lt;/code&gt; branch for us. To quote the docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This saves me from even having to think about the branch and everything becomes magical.&lt;/p&gt;
&lt;p&gt;This is what &lt;code&gt;ghp-import&lt;/code&gt; was written for.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you used the &lt;code&gt;requirements.txt&lt;/code&gt; file from my project when setting up your virtualenv, you should already have &lt;code&gt;ghp-import&lt;/code&gt; installed (but recall that you can also check with &lt;code&gt;lssitepackages&lt;/code&gt;). The &lt;code&gt;pelican-quickstart&lt;/code&gt; command should have also added a &lt;code&gt;make github&lt;/code&gt; portion to the Makefile. The pieces are falling into place like magic. The final step:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it. That make command actually does quite a lot, so definitely dig through the sequence of events there, but not right now. Right now, you should do two things: first, check that your repo has a new branch called &lt;code&gt;gh-pages&lt;/code&gt; and then check that you can go to &lt;code&gt;https://your-user-name.github.io/new-repo-name&lt;/code&gt;. (I'll totally understand if you do the second part first.) &lt;/p&gt;
&lt;p&gt;With luck (and minimal misleading mistakes on my part), you are well on your way. I've got a few other helpful upgrades to the base setup and will try to share any other future upgrades that might be helpful, too. Until then, happy blogging with your new GitHub Pages-hosted Pelican site. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Montague</dc:creator><pubDate>Wed, 15 Jan 2014 00:00:00 -0700</pubDate><guid>tag:joshmontague.com,2014-01-15:posts/2014/pelican-on-github/</guid><category>python</category><category>pelican</category><category>git</category><category>weekend</category></item><item><title>hello world</title><link>http://joshmontague.com/posts/2014/hello-world/</link><description>&lt;p&gt;My 2014 resolutions are completely and shamelessly copied from slash inspired by my friend &lt;a href="http://semi-rad.com/2013/12/do-things-and-make-things-next-year"&gt;Brendan Leonard&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Do things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make things.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is step 1 of Make Things. More to come. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Josh Montague</dc:creator><pubDate>Wed, 01 Jan 2014 00:00:00 -0700</pubDate><guid>tag:joshmontague.com,2014-01-01:posts/2014/hello-world/</guid><category>pelican</category></item></channel></rss>