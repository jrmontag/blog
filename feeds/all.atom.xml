<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>lab notebook</title><link href="http://joshmontague.com/" rel="alternate"></link><link href="http://joshmontague.com/feeds/all.atom.xml" rel="self"></link><id>http://joshmontague.com/</id><updated>2015-07-11T00:00:00-06:00</updated><entry><title>Relieving #SciPy2015 FOMO</title><link href="http://joshmontague.com/posts/2015/scipy2015-fomo/" rel="alternate"></link><updated>2015-07-11T00:00:00-06:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2015-07-11:posts/2015/scipy2015-fomo/</id><summary type="html">&lt;p&gt;Learning new things is incredible. Especially when you get to the point of building on top of growing skills in a particular domain. Over the last couple of years, I've learned a lot about Python, in particular for use in data science and analysis. I also really enjoy socializing with peers from the field at conferences, and the one Python-specific conference I attended (PyCon 2014) was a blast. Super friendly attendees, and also getting the chance to meet - in person - with folks who only previously manifested on Twitter and websites.&lt;/p&gt;
&lt;p&gt;Unfortunately, I can't attend every interesting conference. So when I saw that &lt;a href="http://scipy2015.scipy.org/"&gt;SciPy 2015&lt;/a&gt; just taking place in Austin, Texas this week, I felt a little bit of &lt;a href="http://www.urbandictionary.com/define.php?term=fomo"&gt;FOMO&lt;/a&gt; for all the great stuff that was being presented. But, I was pleased to see a relatively consistent hashtag being used (&lt;a href="https://twitter.com/search?q=%23scipy2015&amp;amp;src=tyah&amp;amp;vertical=default&amp;amp;f=tweets"&gt;#SciPy2015&lt;/a&gt;) to tie together content that was being shared on Twitter. One of the many reasons I love using Twitter for my professional development, is that so many people use it to share the new and interesting things they experience. &lt;/p&gt;
&lt;p&gt;Knowing that the next best thing to being there is to see the code, slide decks, and possibly video, &lt;a href="https://twitter.com/jrmontag/status/619184310663294977"&gt;I shared a Twitter search&lt;/a&gt; that I was using to occasionally check in on new content. That search was great while the conference was happening, but after the event is over the real-time search will be less helpful. So, today I saved &lt;a href="https://twitter.com/search/?q=tutorial+OR+slides+OR+code+%23scipy2015+lang%3Aen+since%3A2015-07-06+until%3A2015-07-14+filter%3Alinks"&gt;a more specific version of the same search&lt;/a&gt; that includes a bit of the advanced search functionality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires #SciPy2015 hashtag&lt;/li&gt;
&lt;li&gt;requires one of: tutorial, code, slides&lt;/li&gt;
&lt;li&gt;requires that the Tweet include a link&lt;/li&gt;
&lt;li&gt;requires that the Tweet is in English&lt;/li&gt;
&lt;li&gt;uses time windowing to focus on that one week (plus a couple of days)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This way I can return to the results and consume them at whatever pace I need. There's an embedded version of this search below, too.&lt;/p&gt;
&lt;p&gt;Of note, Enthought also does a wonderful job of quickly getting the video recordings of the talks into &lt;a href="https://www.youtube.com/playlist?list=PLYx7XA2nY5Gcpabmu61kKcToLz0FapmHu"&gt;a super convenient playlist on YouTube&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;a class="twitter-timeline" href="https://twitter.com/search?q=tutorial%20OR%20slides%20OR%20code%20%23scipy2015%20lang%3Aen%20since%3A2015-07-06%20until%3A2015-07-14%20filter%3Alinks" data-widget-id="619998240641912832"&gt;Tweets about tutorial OR slides OR code #scipy2015 lang:en since:2015-07-06 until:2015-07-14 filter:links&lt;/a&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");&lt;/script&gt;&lt;/p&gt;</summary><category term="data science"></category><category term="python"></category><category term="conference"></category><category term="twitter"></category></entry><entry><title>The Setup</title><link href="http://joshmontague.com/posts/2014/the-setup/" rel="alternate"></link><updated>2014-10-28T00:00:00-06:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-10-28:posts/2014/the-setup/</id><summary type="html">&lt;p&gt;&lt;a href="http://usesthis.com/"&gt;The Setup&lt;/a&gt; has always been one of my favorite sites on the internet. I love seeing how other people - in vastly different careers - get their work done. Though I don't &lt;a href="http://warren.king.usesthis.com/"&gt;craft Chinese soliders out of cardboard&lt;/a&gt; or anything nearly that fascinating, I thought it would be a fun exercise to put together my own version. &lt;/p&gt;
&lt;h2&gt;Who are you, and what do you do?&lt;/h2&gt;
&lt;p&gt;I'm &lt;a href="https://twitter.com/jrmontag"&gt;Josh Montague&lt;/a&gt;, and I'm a data scientist at &lt;a href="https://twitter.com/jrmontag"&gt;Twitter&lt;/a&gt;. As you might expect, there are many people at Twitter with that title and many do quite different work. My work is focused on helping customers of Twitter's &lt;a href="http://gnip.com/"&gt;data products&lt;/a&gt; knock their own products out of the park. In real-talk, that means I spend most of my time writing code and working closely with partners to conceptualize and prototype their products. &lt;/p&gt;
&lt;h2&gt;What hardware do you use?&lt;/h2&gt;
&lt;p&gt;I use (and adore) my &lt;a href="http://smile.amazon.com/gp/product/B002TSIMW4/"&gt;Leuchterm notebook&lt;/a&gt; (8", with dots) for taking notes during phone calls, meetings, and any other times when typing on a laptop feels out of place or unnecessary. It's a fantastic thought-collector for all manner of doodles, brainstorms, projects, and data visualizations. In that notebook (and everywhere else, really), I'll write with whatever is around, but my preference is for ultra fine gel ballpoints. I always have to &lt;a href="http://smile.amazon.com/gp/product/B0058NN8NK"&gt;order them on Amazon&lt;/a&gt; because the fat-tipped, 0.7" version seems to have some kind of tyrannical reign over brick and mortar stores. Yes, I'm the guy who orders his pens on the internet. &lt;/p&gt;
&lt;p&gt;In our open office space, I use a pair of &lt;a href="http://smile.amazon.com/gp/product/B000065BPB"&gt;Sennheiser over-ear headphones&lt;/a&gt; when I need total focus; they have amazing passive noise cancellation (read: they're thick and insulated). While they are wonderful for listening to music, I can't concentrate on work tasks while listening to music, so I pretty much always have a &lt;a href="http://soundrown.com/"&gt;soundrown.com tab&lt;/a&gt; open and playing. My recommended recipe: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coffee&lt;/span&gt; &lt;span class="n"&gt;shop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;waves&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;white&lt;/span&gt; &lt;span class="n"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coefficients&lt;/span&gt; &lt;span class="n"&gt;relative&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;adjust&lt;/span&gt; &lt;span class="n"&gt;overall&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;taste&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Senns are my first foray into &amp;gt;$20 headphones, and so far they've been great; if you need to quickly dispose of a bunch of money, my teammate has these insane &lt;a href="http://www.bose.com/controller?url=/shop_online/headphones/noise_cancelling_headphones/quietcomfort_20/index.jsp&amp;amp;Variant=qc20i"&gt;Bose in-ear things&lt;/a&gt; and I gasped outloud when I turned on the noise-cancellation. At least, I think I did. &lt;/p&gt;
&lt;p&gt;I carry an iPhone 5 everywhere for all the uses in the world (+ multi-factor auth all the things). The battery is absolutely terrible, so I always keep &lt;a href="http://smile.amazon.com/gp/product/B00AANMVNQ"&gt;a portable battery&lt;/a&gt; in my bag. That might actually be one of the most worthwhile $25 I've ever spent.  &lt;/p&gt;
&lt;p&gt;My work machine is an i7, 16-GB, 15" &lt;a href="http://store.apple.com/us/buy-mac/macbook-pro"&gt;MacBook Pro&lt;/a&gt;, which is usually connected to an external display of some sort (either an older Apple Cinema Display or a Dell). I tend to do my in-focus work on the biggest display available, and use the laptop display for other things that require less frequent attention (Twitter, taking notes, etc). At my seated desk, I bring the laptop display closer to eye-level with a &lt;a href="http://smile.amazon.com/Griffin-Technology-GC16034-Elevator-Laptop/dp/B0044RUSZM/"&gt;pretty simple stand&lt;/a&gt; that makes a big difference in the comfort of my neck. Whether seated or roaming around to the assorted standing desks in the office, I usually have a &lt;a href="http://store.apple.com/us/product/MB829LL/A/apple-magic-mouse"&gt;Magic Mouse&lt;/a&gt; and a plain old &lt;a href="http://store.apple.com/us/product/MB110LL/B/apple-keyboard-with-numeric-keypad-english-usa"&gt;USB keyboard&lt;/a&gt;. The MBP can be a little too heavy to lug around all the time (and a little too big for the bus commute, where I'm typically writing these posts) but the screen real estate and horsepower make it worth the effort. In my 8-year-old &lt;a href="http://www.timbuk2.com/customizer#/product/18-custom-classic-messenger-bag/size/4/customize"&gt;Timbuk2 messenger bag&lt;/a&gt;, the MBP lives in a &lt;a href="http://www.coteetciel.com/en-US/sleeves/filter/macbook_pro_15/"&gt;Côte&amp;amp;Ciel sleeve&lt;/a&gt; in an attempt to minimize bumps and spilled coffee. &lt;/p&gt;
&lt;h2&gt;And what software?&lt;/h2&gt;
&lt;p&gt;This is where I spent most of my time. I try out lots of tools to make my work (and life) easier. For me, "easier" is always a balance between "more tools that each do one thing well" and "fewer tools that each do all sorts of things." It's a constant work in progress.  &lt;/p&gt;
&lt;p&gt;I'm still using OS X 10.9 (Mavericks). When it comes to my work system, I'm rarely an early adopter because new OS updates always break environments. Always. I like to keep one project per "Desktop" in OSX, so I usually have seven or eight Desktops running at any one time. &lt;/p&gt;
&lt;p&gt;I probably spend 50% of my time in OS X's Terminal. Most of that time is spent in &lt;a href="http://www.vim.org/"&gt;vim&lt;/a&gt;. I write most things there: code (mostly Python and bash), documents (Markdown, text, and TeX), etc. The &lt;a href="http://ethanschoonover.com/solarized"&gt;solarized (dark)&lt;/a&gt; theme gives nice syntax highlighting contrast, and also keeps my eyes from getting tired (this will be a recurring theme). I keep meaning to try out &lt;a href="http://iterm2.com/features.html"&gt;iTerm&lt;/a&gt; but haven't gotten around to it. I spend a lot of time working on remote Linux servers, so I tend to keep it simple (and similar) on my own machine. When I'm feeling fancy, I'll fire up &lt;a href="https://code.google.com/p/macvim/"&gt;MacVim&lt;/a&gt; for some bonus mouse-clicking magic. &lt;/p&gt;
&lt;p&gt;I'd guess the next 45% of my time is spent in &lt;a href="https://www.google.com/chrome/?"&gt;Chrome&lt;/a&gt;. Among all the articles I've opened to read (but will inevitably drop into the &lt;a href="http://getpocket.com/"&gt;Pocket&lt;/a&gt; black hole), you'll pretty much always find some combination of tabs open that include: &lt;a href="https://tweetdeck.twitter.com/"&gt;TweetDeck&lt;/a&gt;, all Google Apps (mail, cal, drive, and a handful of docs), &lt;a href="http://stackoverflow.com/"&gt;StackOverflow&lt;/a&gt;, the &lt;a href="https://docs.python.org/2/index.html"&gt;Python docs&lt;/a&gt;, &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;, the HipChat &lt;a href="https://www.hipchat.com/emoticons"&gt;emoticon reference&lt;/a&gt; (chompy), &lt;a href="https://www.atlassian.com/software/jira"&gt;JIRA&lt;/a&gt;, &lt;a href="http://soundrown.com"&gt;soundrown&lt;/a&gt;, and often a &lt;a href="http://en.wikipedia.org/wiki/Gamma_distribution"&gt;wikipedia page&lt;/a&gt; or two about whatever concept or techinique I'm trying to grok at the moment.  &lt;/p&gt;
&lt;p&gt;I also use a bunch of &lt;a href="https://chrome.google.com/webstore/category/extensions"&gt;Extensions&lt;/a&gt; because efficiency makes me incredibly happy: &lt;a href="https://chrome.google.com/webstore/detail/blue-jeans/iedelpfmeejalepbpmmfbfnfoeojohpp"&gt;BlueJeans&lt;/a&gt; (video conferencing), &lt;a href="https://chrome.google.com/webstore/detail/pioclpoplcdbaefihamjohnefbikjilc"&gt;Evernote Web Clipper&lt;/a&gt; (quickly stash anything you come across online), &lt;a href="https://chrome.google.com/webstore/detail/hipbfijinpcgfogaopmgehiegacbhmob"&gt;feedly&lt;/a&gt; (rss), &lt;a href="https://chrome.google.com/webstore/detail/boadgeojelhgndaghljhdicfkmllpafd"&gt;Google Cast&lt;/a&gt; (for Chromecast), &lt;a href="https://chrome.google.com/webstore/detail/chklaanhfefbnpoihckbnefhakgolnmc"&gt;JSONView&lt;/a&gt; &amp;amp; &lt;a href="https://chrome.google.com/webstore/detail/gbammbheopgpmaagmckhpjbfgdfkpadb"&gt;XML Tree&lt;/a&gt; (prettify API responses), &lt;a href="https://chrome.google.com/webstore/detail/hdokiejnpimakedhajhdlcegeplioahd"&gt;LastPass&lt;/a&gt; (password manager), &lt;a href="https://chrome.google.com/webstore/detail/gpoigdifkoadgajcincpilkjmejcaanc"&gt;Markdown Reader&lt;/a&gt; (live rendering of local .md files - usually how I write and review these posts), &lt;a href="https://chrome.google.com/webstore/detail/laookkfknpbbblfpciffpaejjkokdgca"&gt;Momentum&lt;/a&gt; (eye candy), &lt;a href="https://chrome.google.com/webstore/detail/niloccemoadcdkdjlinkgdfekeahmflj"&gt;Pocket&lt;/a&gt; (save-for-later), &lt;a href="http://www.smilealways.io/"&gt;Smile Always&lt;/a&gt; (get Amazon to donate to charity of your choice every time you buy things - thanks to &lt;a href="https://twitter.com/hspter"&gt;@hspter&lt;/a&gt; for pointing this out!), and &lt;a href="https://chrome.google.com/webstore/detail/ajjloplcjllkammemhenacfjcccockde"&gt;Tab-Snap&lt;/a&gt; (store giant tab list as restorable text file). The other Chrome "hack" that I use all the time is to use &lt;code&gt;Bookmarks | Bookmark All Tabs...&lt;/code&gt; to create a new bookmark folder with all the relevant pages for each project on which I'm working. This is especially helpful when there are (8 desktops) x (10 tabs) open and Chrome decides to crash.  &lt;/p&gt;
&lt;p&gt;The last 5% of my time is spent switching between a host of other apps: &lt;a href="https://evernote.com/"&gt;Evernote&lt;/a&gt; (daily note-taking and long-term reference storage), &lt;a href="https://www.hipchat.com/"&gt;HipChat&lt;/a&gt; (team/org communication), &lt;a href="https://cyberduck.io/?l=en"&gt;Cyberduck&lt;/a&gt; (FTP/S3 browser), &lt;a href="http://www.gimp.org/"&gt;Gimp&lt;/a&gt; (for my amateur image creation needs), &lt;a href="https://www.apple.com/mac/keynote/"&gt;Keynote&lt;/a&gt; (for important presentations, GDocs for less important ones), &lt;a href="http://www.omnigroup.com/omnigraphsketcher/"&gt;OmniGraphSketcher/GraphSketcher&lt;/a&gt; (super handy for quick copypasta plotting of data from the command line), and &lt;a href="https://www.toggl.com/"&gt;Toggl&lt;/a&gt; (time tracking; incredibly enlightening if you've never tried it). Not too long ago, I would have also added &lt;a href="http://www.rstudio.com/"&gt;RStudio&lt;/a&gt; (the amazing &lt;a href="http://www.r-project.org/"&gt;R&lt;/a&gt; IDE), but I've transitioned 99% of my R work into Python. I think this is mostly a function of how I learned to use R in the first place - a topic for another day.  &lt;/p&gt;
&lt;p&gt;There are a handful of other apps that are hugely valuable and always running in the background, too: &lt;a href="http://smilesoftware.com/TextExpander/index.html"&gt;TextExpander&lt;/a&gt; (saves time and typing all. over. the place.), &lt;a href="https://www.dropbox.com/home"&gt;Dropbox&lt;/a&gt; (for both personal syncing - Camera Uploads! - and quick file sharing), &lt;a href="https://itunes.apple.com/us/app/utc-bar/id525372278?mt=12"&gt;UTC Bar&lt;/a&gt; (our data at work lives in UTC and &lt;a href="https://twitter.com/jrmontag/status/524592677350694912"&gt;timezones are terrible&lt;/a&gt;), &lt;a href="https://justgetflux.com/"&gt;f.lux&lt;/a&gt; (adjusts your display's color temperature - helps reduce eye strain when working at night), &lt;a href="http://www.dejal.com/timeout/"&gt;Time Out&lt;/a&gt; (schedule periodic micro- and macro-breaks to reduce eye strain, and force walking breaks throughout the day; I use 30-second breaks every 20 minutes and 5-minute breaks every hour). &lt;/p&gt;
&lt;h2&gt;What would be your dream setup?&lt;/h2&gt;
&lt;p&gt;I think I'm pretty close to it, actually. Some small changes would include: a not-yet-possible 13" MacBook Air with the specs of the burly 15" Retina MBP, a pair of those magical &lt;a href="http://www.bose.com/controller?url=/shop_online/headphones/noise_cancelling_headphones/quietcomfort_20/index.jsp&amp;amp;Variant=qc20i"&gt;Bose headphones&lt;/a&gt; I mentioned earlier, a couple of &lt;a href="http://store.apple.com/us/product/MC914LL/B/apple-thunderbolt-display-27-inch?aid=www-k2-displays+-+index-n%40p&amp;amp;cp=k2-displays+-n%40p"&gt;27" displays&lt;/a&gt;, and a beautiful, automatic &lt;a href="http://www.nextdesks.com/terra"&gt;sit-to-stand desk&lt;/a&gt; would be a nice start. &lt;/p&gt;
&lt;p&gt;Finally, I'll also note that at home I have an incredible 2007 MacBook (the white plastic one!) that's just barely hanging on. Don't tell Jony Ive or he'll probably come to my house and punch it. When it bites the dust, I hope to save for a &lt;a href="https://www.apple.com/macbook-air/"&gt;13" MacBook Air&lt;/a&gt; for personal projects. &lt;/p&gt;</summary><category term="gear"></category><category term="hardware"></category><category term="software"></category></entry><entry><title>Short: From plain text to JSON with jq</title><link href="http://joshmontague.com/posts/2014/create-json-with-jq/" rel="alternate"></link><updated>2014-09-28T00:00:00-06:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-09-28:posts/2014/create-json-with-jq/</id><summary type="html">&lt;p&gt;Most data in my work world is &lt;a href="http://www.json.org/"&gt;JSON&lt;/a&gt;, and so I use a lot of tools designed for that format. For example, we maintain (and use, all the time) &lt;a href="https://pypi.python.org/pypi/gnacs/"&gt;an activity parser&lt;/a&gt; that is designed for Gnip's &lt;a href="http://en.wikipedia.org/wiki/Activity_Streams_(format)"&gt;Activity Stream&lt;/a&gt; data format from a half dozen different platforms. It handles all the assorted messages you might get from the API, and lets you pick and choose the output, among other things. &lt;/p&gt;
&lt;p&gt;A relatively new arrow in my quiver of tools at work is &lt;a href="http://stedolan.github.io/jq/"&gt;&lt;code&gt;jq&lt;/code&gt;, a fast and easy command-line JSON parser&lt;/a&gt;. This particular quote on the website is the best summary:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;jq&lt;/code&gt; is like &lt;code&gt;sed&lt;/code&gt; for JSON data – you can use it to slice and filter and map and transform structured data with the same ease that &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt; and friends let you play with text.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I recently &lt;a href="http://support.gnip.com/articles/data-and-rule-management-with-jq.html"&gt;wrote on an article&lt;/a&gt; for our support site about using &lt;code&gt;jq&lt;/code&gt;; a kind of "tips and tricks with &lt;code&gt;jq&lt;/code&gt;". This gave me a great opportunity to experiment with something I'd been curious about: can &lt;code&gt;jq&lt;/code&gt; be used to &lt;em&gt;create&lt;/em&gt; JSON structures?  &lt;/p&gt;
&lt;p&gt;Spoiler alert: the answer is yes! &lt;/p&gt;
&lt;p&gt;You can &lt;a href="http://support.gnip.com/articles/data-and-rule-management-with-jq.html"&gt;click over there if you'd like to read the full article&lt;/a&gt;, but I'll add the punch line here. With a combination of &lt;code&gt;split&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, the right command-line arguments, and an alias, I now use this regularly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="nt"&gt;rules&lt;/span&gt;&lt;span class="nc"&gt;.txt&lt;/span&gt;     &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;tab-separated&lt;/span&gt; &lt;span class="nt"&gt;columns&lt;/span&gt;
&lt;span class="nt"&gt;dog&lt;/span&gt; &lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="nd"&gt;:en&lt;/span&gt; &lt;span class="nt"&gt;tag&lt;/span&gt;&lt;span class="nd"&gt;:dogs:english&lt;/span&gt;
&lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="nt"&gt;sample&lt;/span&gt;&lt;span class="nd"&gt;:10&lt;/span&gt;   &lt;span class="nt"&gt;tag&lt;/span&gt;&lt;span class="nd"&gt;:cats:0&lt;/span&gt;&lt;span class="nc"&gt;.1&lt;/span&gt;
&lt;span class="nt"&gt;from&lt;/span&gt;&lt;span class="nd"&gt;:gnip&lt;/span&gt;   &lt;span class="nt"&gt;tag&lt;/span&gt;&lt;span class="nd"&gt;:user:gnip&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="nt"&gt;jqrules&lt;/span&gt; &lt;span class="nt"&gt;rules&lt;/span&gt;&lt;span class="nc"&gt;.txt&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;rules&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dog lang:en&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tag:dogs:english&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cat sample:10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tag:cats:0.1&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;from:gnip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;tag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tag:user:gnip&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="cp"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you skim through &lt;a href="http://stedolan.github.io/jq/manual/"&gt;the documentation&lt;/a&gt;, it's clear that &lt;code&gt;jq&lt;/code&gt; can do a ton of awesome things; every time I learn a new one, it's a great boost in productivity. Happy JSON parsing (and, now, creating)!&lt;/p&gt;</summary><category term="jq"></category><category term="command line"></category><category term="tools"></category></entry><entry><title>One Year In: Data Scientist</title><link href="http://joshmontague.com/posts/2014/one-year-in-data-scientist/" rel="alternate"></link><updated>2014-09-03T00:00:00-06:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-09-03:posts/2014/one-year-in-data-scientist/</id><summary type="html">&lt;p&gt;&lt;em&gt;Updated:&lt;/em&gt; &lt;em&gt;after a particularly full week recently, another important topic came to mind that I felt would be valuable to include here: "keeping the wheels on the cart." You can find that section at the bottom.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;This summer marked just over one year since I donned a goofy hat, shook my advisor's hand, promised my parents they'd never have to attend another graduation ceremony, and received the piece of paper that declared I was done with higher education.&lt;sup id="fnref:school"&gt;&lt;a class="footnote-ref" href="#fn:school" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; About the same time, I started working full-time as a data scientist at a small-ish software company. It seems like the one year mark is as good a time as any to pause and reflect, maybe for both my own sake and for that of anyone wondering, "Josh, what were the biggest changes you experienced in your first year that could be helpful for someone interested in making a similar transition?" Maybe no one is actually wondering that... but writing is healthy, so here you go anyway. &lt;/p&gt;
&lt;p&gt;I should start with some context; even though this kind of story will be different for everyone, I can at least give an idea about the "from" and "to". Before this transition, I spent six years in graduate school studying physics. As is common for these programs, there were two or three years of coursework followed by (and overlapping with) three or four years of research. When I left the lab, I started working full-time at a software (&lt;a href="http://en.wikipedia.org/wiki/Software_as_a_service"&gt;SaaS&lt;/a&gt;) company of about 50 people.&lt;sup id="fnref:path"&gt;&lt;a class="footnote-ref" href="#fn:path" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; My role (and that of my small team) was best described as "internal consultancy": doing research and providing answers to technical questions that came from sales, marketing, product, and engineering. This required varying levels of software development and analysis in a handful of languages and environments: predominantly a shell command line (bash), Python, and R. &lt;/p&gt;
&lt;p&gt;Ok, on to the more interesting stuff; what were the biggest changes in this transition? &lt;/p&gt;
&lt;h2&gt;Time&lt;/h2&gt;
&lt;p&gt;The first change I noticed was the perception and use of time. In graduate school, the relevant time scales were something along these lines: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(&lt;strong&gt;substantial research contribution&lt;/strong&gt; aka graduation: &lt;em&gt;five to six years&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;major result&lt;/strong&gt; journal article / funding proposal: &lt;em&gt;one year&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minor result&lt;/strong&gt; conference paper / presentation: &lt;em&gt;three months&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fractional progress&lt;/strong&gt; incremental work toward minor results: &lt;em&gt;one week to one month&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Particularly in my experimental research, "fractional progress" was simply the nitty gritty bit of getting actual work done: "successfully collecting dataset X," or "completing the analysis of dataset Y," or "finally building the op-amp with the proper gain and signal-to-noise ratio." &lt;/p&gt;
&lt;p&gt;In contrast, I vividly recall the first urgent task I was assigned in my new role, which came with a followup of "we really need these answers soon - like tomorrow." Now, first and foremost: when made frequently, that kind of request can be a real red flag about the perceived value of your time. Thankfully, this was an exceptional case and most requests do not come with a priority-level-9 urgency. But that experience was an extreme example that frames the idea. Relevant time scales in the business world are shorter. I've found the scales to be more along these lines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;major result&lt;/strong&gt; delivery of all projects for quarterly goals: &lt;em&gt;three months&lt;/em&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minor result&lt;/strong&gt; success / progress on individual projects: &lt;em&gt;one month&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fractional progress&lt;/strong&gt; incremental work toward minor results: &lt;em&gt;one day to one week&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an aside: you may not have thought about time in units of "quarters" before, but in a business setting, you will. See also, the &lt;strong&gt;Business&lt;/strong&gt; section, below.&lt;/p&gt;
&lt;p&gt;In this case, "fractional progress" / day-to-day work is pretty similar in scale, but covers many more potential areas: working through a particular data collection or analysis, bug fixes and new features in software and tools, customer conversations and support, putting together presentations for meetings or Meetups, and all manner of assorted other things. Any one of these may be a small (or large) part of a bigger project that provides business value.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchline: time is "shorter"; progress is measured more frequently.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;Drivers&lt;/h2&gt;
&lt;p&gt;A bigger change, still, was the shift in the motivation and drivers of the work. When I joined my research lab, there was already some research momentum from previous work. For my own research, I took a fork of that previous work and mostly tugged on the interesting threads to see where they led. Now, there were some implicit things at work there, too; for example, my advisor had enough experience to feel that my research was worthwhile and capable of being pitched to funding agencies. But, beyond that, the research directions were - as a favorite professor once described&lt;sup id="fnref:intuition"&gt;&lt;a class="footnote-ref" href="#fn:intuition" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; - very much a "follow your nose" experience. Use your intuition and best judgement, but let the path be guided by the new and unexpected discoveries that occur along the way.  &lt;/p&gt;
&lt;p&gt;In my new role, my team is guided by a similar sense of exploration within any particular project (undoubtedly related to fact that we're mostly former research scientists). But the selection of what projects we work on is driven much more by the business needs. Will this project help the industry move forward? Will it drive interest in our products or help us better understand the current use of our services? Does it directly benefit a customer? Does it ultimately lead to revenue for the company? Even though our team is not a software development team, most of our colleagues are; so we try to work using some of the same principles. This means "should we work on X?" is often decided by how close the &lt;a href="http://en.wikipedia.org/wiki/User_story"&gt;user story&lt;/a&gt; gets to the actual business customer. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchline: exploration and following intuition is required, but stay focused on things that will provide business value.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;Business&lt;/h2&gt;
&lt;p&gt;The &lt;s&gt;last&lt;/s&gt; penultimate idea I'll mention is around what it means to be a "business." I'll admit that I previously had approximately zero understanding of what came along with - and was considered part of - a business. At some level, it had to mean that there is a product or service (maybe more than one), and revenue came in from somewhere. For example, consumers could pay the business for the product. Or, consumers can use the product for free while being shown advertisements, and those advertisers would contribute revenue to the business for the opportunity to display ads. Or maybe all of the funding comes from an actual person or another business (angel or venture investments) in the hope that someday they'll create a successful product that ends up in one of the first two categories (and subsequently provide a return on investment for whomever provided the initial funds). Anyway, this is all perspective that I have &lt;em&gt;now&lt;/em&gt;, but I had no idea about this before. &lt;/p&gt;
&lt;p&gt;One of the most overwhelming changes I experienced was the range of different people and teams involved; it turns out it takes a lot of cooperative, functional teams to make a successful business. Wrapping my head around the acronyms: BD, PMs, AMs, ... I struggled for quite a while trying to understand and internalize the roles that all of these people had. Oh, and those ones are: business development, product (or project) manager (or sometimes "product marketing", just to mess with you), and account managers. Finding out the roles that each of these groups of people (and all the rest!) have within the company is really helpful for understanding your own place and value. Don't be shy about asking folks what they do; it helps identify ways you can be assests for one another. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchlines: 1) funding has to come from somewhere; it's helpful to understand what - and to whom - your business owes its existence. 2) It takes a lot of different roles to really make a business rock.&lt;sup id="fnref:headcount"&gt;&lt;a class="footnote-ref" href="#fn:headcount" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; It takes time to comprehend how everyone fills their niche, but learning the roles is crucial.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;"Keeping the wheels on the cart"&lt;/h2&gt;
&lt;p&gt;Finally, if you're lucky (and good at what you do), there will always be more people requesting your time and effort than you have to give. Being in demand is typically a good thing. What this means, however, is that it's up to you to learn where to draw the lines around what you can successfully deliver. Additionally, even when you think you've drawn your lines reasonably and conservatively, unexpected things will arise. Curveballs are sneaky and inevitable. The server is down, the VPN isn't working, the file is 10x bigger than you thought it would be, there's some previously-unheard-of error for which the holy trinity (Google, StackOverflow, and IRC) are powerless. It happens; the key is not freaking out. &lt;/p&gt;
&lt;p&gt;When the path gets rough and the produce (your projects) starts to fall out of the cart, the key is to focus on keeping the wheels on the cart. Keep your focus on preventing the wholesale collapse of the vehicle (and the subsequent disappointment of all involved stakeholders), and then sort out your issues. This may mean compromising on some of the results, so it's helpful to understand the minimum acceptable version. Ideally, your typical approach is to knock projects out of the park, so it's unlikely that anyone will notice the difference between that and these rare times when you've compromised. &lt;/p&gt;
&lt;p&gt;Transparency goes a long way, too. So, it may even be worth describing how your result differed from what you were hoping to achieve. Your mileage may vary.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Punchline: Learn your limits. Focus on keeping things moving when you approach those limits.&lt;/em&gt; &lt;/p&gt;
&lt;h2&gt;Now What?&lt;/h2&gt;
&lt;p&gt;So, what's the takeaway? Unfortunately, I can't help you figure out your new data-related role in a business outside of the research lab (but, hey, congrats on finding something!). But, I hope these thoughts shine a bit of light on some of the challenges I ran into related to the approach and awareness that I brought from my previous role in academic research. Everyone's circumstances are a little different, so you may not experience any of these; or maybe you have more. Either way, good luck in your new path!&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:school"&gt;
&lt;p&gt;Barring, of course, any unexpected impulses to set off for an MBA or MD.&amp;#160;&lt;a class="footnote-backref" href="#fnref:school" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:path"&gt;
&lt;p&gt;Having writen this, it feels like there's also an opportunity for a companion article about the particular path that led me to now; I've added it to my list; stay tuned. &amp;#160;&lt;a class="footnote-backref" href="#fnref:path" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:intuition"&gt;
&lt;p&gt;Part of the reason this line was so memorable was that it came while our mid-career professor was trying to explain how we should use our intuition to solve path integrals in quantum mechanics.  &amp;#160;&lt;a class="footnote-backref" href="#fnref:intuition" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:headcount"&gt;
&lt;p&gt;Again, this is from the perspective of a company with ~50 people. At an earlier stage, there were five or six people, so everyone had to do their best to wear multiple hats.&amp;#160;&lt;a class="footnote-backref" href="#fnref:headcount" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="career"></category><category term="business"></category></entry><entry><title>Short: Create a Text File of U.S. State Names</title><link href="http://joshmontague.com/posts/2014/state-names/" rel="alternate"></link><updated>2014-06-09T00:00:00-06:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-06-09:posts/2014/state-names/</id><summary type="html">&lt;p&gt;While working on a project recently, I needed a simple list of US State names. My goal was to have a plain text file, one state per line, no funny business. The order of the states wasn't important. I always like a command-line challenge, so my first thought was "find the list online somewhere, &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt; as needed, slice up the html, and be done."&lt;sup id="fnref:woops"&gt;&lt;a class="footnote-ref" href="#fn:woops" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;So, I went to &lt;a href="http://en.wikipedia.org/wiki/Main_Page"&gt;the source of all information&lt;/a&gt;, and lo! there is a &lt;a href="http://en.wikipedia.org/wiki/List_of_states_and_territories_of_the_United_States#States"&gt;table&lt;/a&gt; whose first column is all the US states. &lt;em&gt;#fistpump&lt;/em&gt; The only problem is I really wasn't planning to parse HTML for this little exercise; seems like a bit of overkill. But then I noted the &lt;code&gt;[edit]&lt;/code&gt; link next to the table name...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Wikipedia table edit button" src="http://joshmontague.com/images/state-table.jpg" title="Yes, this will definitely work." /&gt;&lt;/p&gt;
&lt;p&gt;... and clicked through that to observe just the table source. Now this we can work with! &lt;/p&gt;
&lt;p&gt;I simply copy/pasted this plain text into a file locally (say, &lt;code&gt;states-table.txt&lt;/code&gt;). Then, had a look:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;head -n30 states-table.txt 
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;States&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;| &lt;span class="nv"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wikitable sortable plainrowheaders&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text-align: right;&amp;quot;&lt;/span&gt;
|+ States of the United States
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|State
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1%|&lt;span class="o"&gt;[[&lt;/span&gt;List of U.S. state abbreviations|Abbr.&lt;span class="o"&gt;]]&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8%|&lt;span class="o"&gt;[[&lt;/span&gt;Capital city|Capital&lt;span class="o"&gt;]]&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Largest city&lt;span class="o"&gt;{{&lt;/span&gt;&lt;span class="c"&gt;#tag:ref|The largest city is the city in a state with the largest population in the [[city proper]]; [[metropolitan area]]s are not considered in this number.|group=upper-alpha|name=a}}&amp;lt;ref name=&amp;quot;State and Local Government Finances and Employment&amp;quot;&amp;gt;{{cite web|url=http://www.census.gov/compendia/statab/2012/tables/12s0448.pdf|title=State and Local Government Finances and Employment|year=2012|publisher=[[United States Census Bureau]]|pages=284|type=pdf|accessdate=July 8, 2013}}&amp;lt;/ref&amp;gt;&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;11% data-sort-type&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;|Statehood
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12%&amp;quot;&lt;/span&gt;|Population&amp;lt;br&amp;gt;&lt;span class="o"&gt;(&lt;/span&gt;2013 est&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;ref &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;PopEstUS&amp;gt;&lt;span class="o"&gt;{{&lt;/span&gt;cite web|url&lt;span class="o"&gt;=&lt;/span&gt;http://www.census.gov/popest/data/state/totals/2013/tables/NST-EST2013-01.xls|title&lt;span class="o"&gt;=&lt;/span&gt;Table 1. Annual Estimates of the Population &lt;span class="k"&gt;for &lt;/span&gt;the United States, Regions, States, and Puerto Rico: April 1, 2010 to July 1, 2013|format&lt;span class="o"&gt;=[[&lt;/span&gt;Microsoft Excel&lt;span class="o"&gt;]]&lt;/span&gt;|work&lt;span class="o"&gt;=&lt;/span&gt;2013 Population Estimates|publisher&lt;span class="o"&gt;=[[&lt;/span&gt;United States Census Bureau&lt;span class="o"&gt;]]&lt;/span&gt;, Population Division|date&lt;span class="o"&gt;=&lt;/span&gt;December 2013|accessdate&lt;span class="o"&gt;=&lt;/span&gt;January 12, 2014&lt;span class="o"&gt;}}&lt;/span&gt;&amp;lt;/ref&amp;gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Total area in mi&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;km&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;&lt;span class="o"&gt;){{&lt;/span&gt;&lt;span class="c"&gt;#tag:ref|Area figures are rounded to the nearest whole number.|group=upper-alpha|name=b}}&amp;lt;ref name=&amp;quot;2010 Census of Population and Housing&amp;quot;&amp;gt;{{cite web|url=http://www.census.gov/prod/cen2010/cph-2-1.pdf|title=2010 Census of Population and Housing|date=September 2012|publisher=[[United States Census Bureau]]|pages=41|type=pdf|accessdate=July 8, 2013}}&amp;lt;/ref&amp;gt;&lt;/span&gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Land area in mi&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;km&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;ref &lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;upper-alpha &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;b /&amp;gt;&amp;lt;ref &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2010 Census of Population and Housing&amp;quot;&lt;/span&gt; /&amp;gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;12%|Water area in mi&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;km&amp;lt;sup&amp;gt;2&amp;lt;/sup&amp;gt;&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;ref &lt;span class="nv"&gt;group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;upper-alpha &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;b /&amp;gt;&amp;lt;ref &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2010 Census of Population and Housing&amp;quot;&lt;/span&gt; /&amp;gt;
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;col&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1%|&lt;span class="o"&gt;[[&lt;/span&gt;List of United States congressional districts|House seat&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)]]&lt;/span&gt;
|-
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;row&amp;quot;&lt;/span&gt;|&lt;span class="o"&gt;{{&lt;/span&gt;flag|Alabama&lt;span class="o"&gt;}}&lt;/span&gt;
|AL
|&lt;span class="o"&gt;[[&lt;/span&gt;Montgomery, Alabama|Montgomery&lt;span class="o"&gt;]]&lt;/span&gt;
|&lt;span class="o"&gt;[[&lt;/span&gt;Birmingham, Alabama|Birmingham&lt;span class="o"&gt;]]&lt;/span&gt;
|December 14, 1819
|4,833,722
|&lt;span class="o"&gt;{{&lt;/span&gt;Convert|52420|mi2|km2|sigfig&lt;span class="o"&gt;=&lt;/span&gt;6|abbr&lt;span class="o"&gt;=&lt;/span&gt;values|sortable&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="o"&gt;}}&lt;/span&gt;
|&lt;span class="o"&gt;{{&lt;/span&gt;Convert|50645|mi2|km2|sigfig&lt;span class="o"&gt;=&lt;/span&gt;6|abbr&lt;span class="o"&gt;=&lt;/span&gt;values|sortable&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="o"&gt;}}&lt;/span&gt;
|&lt;span class="o"&gt;{{&lt;/span&gt;Convert|1775|mi2|km2|sigfig&lt;span class="o"&gt;=&lt;/span&gt;4|abbr&lt;span class="o"&gt;=&lt;/span&gt;values|sortable&lt;span class="o"&gt;=&lt;/span&gt;on&lt;span class="o"&gt;}}&lt;/span&gt;
|7
|-
!scope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;row&amp;quot;&lt;/span&gt;|&lt;span class="o"&gt;{{&lt;/span&gt;flag|Alaska&lt;span class="o"&gt;}}&lt;/span&gt;
|AK
|&lt;span class="o"&gt;[[&lt;/span&gt;Juneau, Alaska|Juneau&lt;span class="o"&gt;]]&lt;/span&gt;
|&lt;span class="o"&gt;[[&lt;/span&gt;Anchorage, Alaska|Anchorage&lt;span class="o"&gt;]]&lt;/span&gt;
|January 3, 1959
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Clearly there's a lot of extra formatting for the other columns, but we can see a couple of the state names, so we can definitely observe some patterns. A simple &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; combination get us almost to the finish line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat states-table.txt | grep &lt;span class="s2"&gt;&amp;quot;flag|&amp;quot;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/^.*flag|//;s/}}.*//&amp;#39;&lt;/span&gt;
Alabama
Alaska
Arizona
Arkansas
California
Colorado
Connecticut
Delaware
Florida
Georgia &lt;span class="o"&gt;(&lt;/span&gt;U.S. state&lt;span class="o"&gt;)&lt;/span&gt;|name&lt;span class="o"&gt;=&lt;/span&gt;Georgia
Hawaii
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One extra bit of &lt;code&gt;sed&lt;/code&gt; formatting (strip anything that's not a letter)... &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat states-table.txt | grep &lt;span class="s2"&gt;&amp;quot;flag|&amp;quot;&lt;/span&gt; | sed &lt;span class="s1"&gt;&amp;#39;s/^.*flag|//;s/}}.*//;s/ [^a-Z].*$//&amp;#39;&lt;/span&gt;
Alabama
Alaska
Arizona
Arkansas
California
Colorado
Connecticut
Delaware
Florida
Georgia
Hawaii
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;... and we're good to go! (note: if you're doing this on OS X, you may have to swap that last &lt;code&gt;sed&lt;/code&gt; range for &lt;code&gt;[^a-zA-Z]&lt;/code&gt;) &lt;/p&gt;
&lt;p&gt;It's always nice to flex your command-line fu.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:woops"&gt;
&lt;p&gt;In hindsight, I clearly could have spent an extra 30 seconds on google and just copypasta'd the results from a site like &lt;a href="http://liststates.com/"&gt;this one&lt;/a&gt;. But where's the fun in that?? &amp;#160;&lt;a class="footnote-backref" href="#fnref:woops" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="short"></category><category term="bash"></category><category term="shell"></category><category term="munge"></category></entry><entry><title>Social Media Pulse Meetup Presentation</title><link href="http://joshmontague.com/posts/2014/ab-pulse-talk/" rel="alternate"></link><updated>2014-02-10T00:00:00-07:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-02-10:posts/2014/ab-pulse-talk/</id><summary type="html">&lt;p&gt;I recently had the pleasure of giving a short talk at one of my favorite local Meetups: &lt;a href="http://www.meetup.com/Analyze-Boulder/events/156806792/"&gt;AnalyzeBoulder&lt;/a&gt;. If you have the chance, this group of folks is a lot of fun to interact with. My talk was a short introduction to the space of social data, the importance of focusing on a single event in a "firehose" of realtime data, and a brief intro of the Social Media Pulse (SMP). The SMP is a model we have used to describe the data shared by e.g. Twitter users following an unprecedented and unexpected event like an earthquake. The slides are available online, &lt;a href="http://jrmontag.github.io/AnalyzeBoulder-SocialPulse/"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jrmontag/AnalyzeBoulder-SocialPulse"&gt;&lt;img alt="Social Media Pulse" src="http://joshmontague.com/images/AB-pulse.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also used the presentation as an opportunity to learn how to create talks using the &lt;a href="http://lab.hakim.se/reveal-js/#/"&gt;reveal.js&lt;/a&gt; framework. I do love to Markdown all the things, so being able to write the talk almost entirely in Markdown (plus occasional javascript/html) was great. This proved to be a pretty fun platform for creating and delivering a talk - not needing to bring my computer to an event was nice. The presentation, all materials and data that went into it, and an IPython notebook for creating some of the figures are all contained in &lt;a href="https://github.com/jrmontag/AnalyzeBoulder-SocialPulse"&gt;the repo&lt;/a&gt;. There's also a template repo for creating your own reveal.js preso available &lt;a href="https://github.com/jrmontag/reveal-template"&gt;here&lt;/a&gt;. &lt;/p&gt;</summary><category term="javascript"></category><category term="models"></category><category term="meetup"></category></entry><entry><title>Weekend Project: Build a Pelican-powered site on GitHub Pages</title><link href="http://joshmontague.com/posts/2014/pelican-on-github/" rel="alternate"></link><updated>2014-01-15T00:00:00-07:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-01-15:posts/2014/pelican-on-github/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Disclaimer: 
This post got pretty long, especially for the first real post on this site. But by boiling down my very non-linear experience and putting this in writing, I hope that you could read through this and make it all work in an hour or so. Let me know how close that is to reality. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For quick, get-up-and-running web publishing, there is &lt;a href="http://tumblr.com"&gt;obviously&lt;/a&gt; &lt;a href="http://wordpress.com"&gt;no&lt;/a&gt; &lt;a href="http://blogger.com"&gt;shortage&lt;/a&gt; &lt;a href="http://medium.com"&gt;of&lt;/a&gt; &lt;a href="http://ghost.org"&gt;platforms&lt;/a&gt; &lt;a href="http://subtle.com"&gt;out&lt;/a&gt; &lt;a href="http://typepad.com"&gt;there&lt;/a&gt; to use; most have a free, hosted version, too (I'm sure there are a million other options I've never heard of). I've certainly started and neglected my share of these platforms (or had them disappear ... RIP &lt;a href="http://posterous.com"&gt;posterous&lt;/a&gt;). &lt;/p&gt;
&lt;p&gt;But, I've been super excited learning things my new career* and I was looking for an outlet for sharing (beyond the &lt;a href="http://twitter.com/jrmontag"&gt;140-character vignettes&lt;/a&gt;). I was looking for a combination of things: balance between "get your hands dirty" and "don't get hung up on too many details", balance between "keep it lightweight" and "give me some features", and balance between "let me learn something new" and "keep it relevant". &lt;/p&gt;
&lt;p&gt;Ultimately, my love for Python won out and I went for a static &lt;a href="https://pelican.readthedocs.org/"&gt;Pelican&lt;/a&gt;-based solution hosted via &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. From this combination of things I get:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python (the language with which I'm most familiar and love to use)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pelican (lightweight, fast, CLI tools for compiling and publishing, compose in Markdown) &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git / GitHub (sweet sweet version control, plus open-source-y website)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I'm still kicking the tires and figuring things out (I haven't even figured out how to change the theme yet), so far it's been fun to explore. There are some components that are still new to me, so I'm learning as I go. This edition of &lt;a href="http://joshmontague.com/tag/weekend.html"&gt;Weekend Project&lt;/a&gt; is just about getting the pieces up and running - better understanding will hopefully come down the road.&lt;/p&gt;
&lt;p&gt;*Another good topic to write about in the future. &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I kicked this project off by reading two great posts by Martin Brochhaus (&lt;a href="http://martinbrochhaus.com/pelican2.html"&gt;newer&lt;/a&gt;, &lt;a href="http://martinbrochhaus.com/pelican.html"&gt;older&lt;/a&gt;), but had to supplement those with various official docs along the way when I was in unfamiliar territory (which was approximately all of the time). I think I also had to add in a few tweaks for things that have changed since those posts were written. You could get most of this by just reading his posts (and I recommend clicking through), but I wanted the experience of writing it out. I've tried to include the most relevant extra links inline below where they were helpful to me - let me know if I missed something super useful.&lt;/p&gt;
&lt;h1&gt;Local Python setup&lt;/h1&gt;
&lt;p&gt;Let's install some packages. I'm using &lt;a href="https://pypi.python.org/pypi/virtualenv"&gt;&lt;code&gt;virtualenv&lt;/code&gt;&lt;/a&gt; to choose a specific Python interpreter and maintain an isolated set of packages relevant to this project. I'm also using &lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/"&gt;&lt;code&gt;virtualenvwrapper&lt;/code&gt;&lt;/a&gt; which is a wrapper for &lt;code&gt;virtualenv&lt;/code&gt; that simplifies the API and makes it a little more friendly to use. Source &lt;code&gt;virtualenvwrapper.sh&lt;/code&gt; and let it set things up with defaults (if you want to override the defaults, open the script and see what environment variables to set before you source the file). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install virtualenv
sudo pip install virtualenvwrapper
&lt;span class="c"&gt;# optionally export the correct environment vars used in the shell script &lt;/span&gt;
&lt;span class="c"&gt;#   (if you want to override the defaults)&lt;/span&gt;
. /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Aside: through the process of setting up this project, I'm starting to finally grok &lt;code&gt;virtualenv&lt;/code&gt;, and I suspect that &lt;code&gt;pip&lt;/code&gt; (via e.g. &lt;code&gt;easy_install&lt;/code&gt;), &lt;code&gt;virtualenv&lt;/code&gt;, and &lt;code&gt;virtualenvwrapper&lt;/code&gt; are among a small number of python packages that should ever be &lt;code&gt;sudo&lt;/code&gt; installed, system-wide.) &lt;/p&gt;
&lt;p&gt;Create a new virtualenv (named 'blogging', for example) with a path to your interpreter (e.g. the result of &lt;code&gt;which python&lt;/code&gt; or whichever installation you'd like to use), and &lt;code&gt;pip install&lt;/code&gt; the relevant packages into that virtualenv (feel free to steal my &lt;a href="https://github.com/jrmontag/blog/blob/master/requirements.txt"&gt;requirements.txt&lt;/a&gt; and run &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;). These packages will also install a bunch of others as dependencies.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkvirtualenv -p /path/to/.../python2.7 blogging     &lt;span class="c"&gt;# for example&lt;/span&gt;
pip install -r /path/to/.../requirements.txt
&lt;span class="c"&gt;# optionally check the currently-installed packages -- a handy cmd to know&lt;/span&gt;
&lt;span class="c"&gt;#   (this is like &amp;#39;pip freeze&amp;#39; for the active virtualenv) &lt;/span&gt;
lssitepackages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At the time of writing, I'm using Python 2.7.6 for this environment. A couple of other &lt;code&gt;virtualenvwrapper&lt;/code&gt; commands that you'll want to know: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;workon              &lt;span class="c"&gt;# list the existing virtualenvs (also visible at ~/.virtualenv) &lt;/span&gt;
workon your_env     &lt;span class="c"&gt;# enter the your_env virtualenv (prompt will change) &lt;/span&gt;
deactivate          &lt;span class="c"&gt;# exit current virtualenv, return to system environment&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Local project setup&lt;/h1&gt;
&lt;p&gt;This part is pretty subjective. Ultimately, we're going to have a git repository involved, but I'm actually keeping it above the root of my project tree for now. I have a &lt;code&gt;blog&lt;/code&gt; directory at the bottom level and am planning to keep e.g. icon and theme directories in there, too. Soon, we'll create a git repository in the &lt;code&gt;src&lt;/code&gt; directory to hold our content. First, use the handy Pelican &lt;a href="https://pelican.readthedocs.org/en/3.2/getting_started.html#kickstart-your-site"&gt;quickstart&lt;/a&gt; command to set up the rest of the project structure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir -p ~/blog/src
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/blog/src
workon blogging     &lt;span class="c"&gt;# or whatever you named your env (and if you aren&amp;#39;t already in it)&lt;/span&gt;
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Don't worry too much about the questions - I just hit enter for all of them to use the default settings. While still in the &lt;code&gt;src&lt;/code&gt; directory, initialize a new git repository (&lt;code&gt;git init&lt;/code&gt;) and create a &lt;code&gt;.gitignore&lt;/code&gt; file with the lines below. We're excluding the compiled, swap, and output (mostly html and CSS) files. The content of &lt;code&gt;output/&lt;/code&gt; will end up in our &lt;code&gt;gh-pages&lt;/code&gt; branch (more on this shortly). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# add these to your .gitignore&lt;/span&gt;
*.pyc
*.swp
*.pid       &lt;span class="c"&gt;# this gets created by the develop_server.sh script&lt;/span&gt;
output/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's sync the repo before we move on. Create a new project repository on GitHub, and skip the "Initialize this repository with a README" part. Grab the ssh address and bring it over to your new local repo. Set the upstream remote / master and add all your new content: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# assuming you&amp;#39;ve created the new-repo repository on github&lt;/span&gt;
git add -A
git commit -m&lt;span class="s2"&gt;&amp;quot;initial commit&amp;quot;&lt;/span&gt; 
git remote add origin new-repo_ssh-address
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If that went well, you can cruise over the repo on GitHub and make sure all your files are there (and hopefully no &lt;code&gt;output/&lt;/code&gt; directory because we included it in the &lt;code&gt;.gitignore&lt;/code&gt;).  &lt;/p&gt;
&lt;p&gt;Time to write your first post. Our articles are going in the &lt;code&gt;src/content/&lt;/code&gt; directory. Pelican supports both &lt;a href="http://docs.getpelican.com/en/3.3.0/getting_started.html#file-metadata"&gt;reStructuredText and Markdown&lt;/a&gt;. The article syntax is different for the two filetypes, so when you pick one, check that link for the proper headings. If you want to just get started using Markdown, then create a simple new file like the one below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# create a file called hello-world.md in src/content/ &lt;/span&gt;
&lt;span class="c"&gt;#   with something like the text below... &lt;/span&gt;
Tite: Hello World!
Date: 2014-01-01
Tags: pelican
Slug: hello-world
Author: Clark Kent
Summary: In which the author writes their first blog post.

We&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re blogging with Pelican!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now that you have some content, time to let Pelican do it's thing. The &lt;code&gt;pelican-quickstart&lt;/code&gt; process should have created a Makefile in your &lt;code&gt;src&lt;/code&gt; directory with some helpful commands for blog development. One of those is labeled &lt;code&gt;devserver&lt;/code&gt; and it lets you view the current state of your &lt;code&gt;content&lt;/code&gt; directory, locally at port 8000. You can look through what &lt;code&gt;make devserver&lt;/code&gt; does (it calls the &lt;code&gt;develop_server.sh&lt;/code&gt; shell script, which in turn calls on Pelican...) or just use it for now and understand it later. &lt;/p&gt;
&lt;p&gt;If all went as planned, you should be able to point a browser to &lt;code&gt;http://localhost:8000/&lt;/code&gt; and see your new blog, live and kicking. Well, live in the only-exists-on-your-machine-while-devserver-is-running kind of way. But it's a start. For now, kill the local devserver process (cntl-C, followed by &lt;code&gt;./develop_server.sh stop&lt;/code&gt; because cntl-C seemingly doesn't fully kill the process), and let's put this content somewhere where others can see it. &lt;/p&gt;
&lt;h1&gt;GitHub Pages setup&lt;/h1&gt;
&lt;p&gt;GitHub is amazingly powerful for a host of reasons. One of those is the ability to set up a low-... actually a basically zero-overhead website to display your projects via &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;. A couple of stellar examples are the docs for &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; - a static website generator similar to Pelican but in Ruby - and Cam Davidson-Pilon's &lt;a href="http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/"&gt;Probabilistic Programming book&lt;/a&gt;. These are also great examples of having your content served through a custom domain (Jekyll) or from the default GitHub address of your project (Probabilistic...). [Tangent: I'm working through Davidson-Pilon's book right now and I highly recommend it if you're into that sort of thing.] &lt;/p&gt;
&lt;p&gt;For now, we'll use the latter and return to talk about custom domain names another time. To serve static content from a GitHub repo, you need a &lt;code&gt;gh-pages&lt;/code&gt; branch as part of your project repo. If you're a git wizard and are already adept at managing branches, this may seem anticlimactic but we can use a &lt;a href="https://github.com/davisp/ghp-import"&gt;really handy script&lt;/a&gt; that manages the &lt;code&gt;gh-pages&lt;/code&gt; branch for us. To quote the docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This saves me from even having to think about the branch and everything becomes magical.&lt;/p&gt;
&lt;p&gt;This is what &lt;code&gt;ghp-import&lt;/code&gt; was written for.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you used the &lt;code&gt;requirements.txt&lt;/code&gt; file from my project when setting up your virtualenv, you should already have &lt;code&gt;ghp-import&lt;/code&gt; installed (but recall that you can also check with &lt;code&gt;lssitepackages&lt;/code&gt;). The &lt;code&gt;pelican-quickstart&lt;/code&gt; command should have also added a &lt;code&gt;make github&lt;/code&gt; portion to the Makefile. The pieces are falling into place like magic. The final step:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it. That make command actually does quite a lot, so definitely dig through the sequence of events there, but not right now. Right now, you should do two things: first, check that your repo has a new branch called &lt;code&gt;gh-pages&lt;/code&gt; and then check that you can go to &lt;code&gt;https://your-user-name.github.io/new-repo-name&lt;/code&gt;. (I'll totally understand if you do the second part first.) &lt;/p&gt;
&lt;p&gt;With luck (and minimal misleading mistakes on my part), you are well on your way. I've got a few other helpful upgrades to the base setup and will try to share any other future upgrades that might be helpful, too. Until then, happy blogging with your new GitHub Pages-hosted Pelican site. &lt;/p&gt;</summary><category term="python"></category><category term="pelican"></category><category term="git"></category><category term="weekend"></category></entry><entry><title>hello world</title><link href="http://joshmontague.com/posts/2014/hello-world/" rel="alternate"></link><updated>2014-01-01T00:00:00-07:00</updated><author><name>Josh Montague</name></author><id>tag:joshmontague.com,2014-01-01:posts/2014/hello-world/</id><summary type="html">&lt;p&gt;My 2014 resolutions are completely and shamelessly copied from slash inspired by my friend &lt;a href="http://semi-rad.com/2013/12/do-things-and-make-things-next-year"&gt;Brendan Leonard&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Do things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make things.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is step 1 of Make Things. More to come. &lt;/p&gt;</summary><category term="pelican"></category></entry></feed>